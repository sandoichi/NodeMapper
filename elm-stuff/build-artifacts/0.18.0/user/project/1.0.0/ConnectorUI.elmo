var _user$project$ConnectorUI$getSideText = function (side) {
	var _p0 = side;
	switch (_p0.ctor) {
		case 'Top':
			return '^';
		case 'Bottom':
			return 'v';
		case 'Left':
			return '->';
		default:
			return '<-';
	}
};
var _user$project$ConnectorUI$stringToSide = function (s) {
	var _p1 = s;
	switch (_p1) {
		case 'Top':
			return _user$project$Connectors$Top;
		case 'Bottom':
			return _user$project$Connectors$Bottom;
		case 'Left':
			return _user$project$Connectors$Left;
		case 'Right':
			return _user$project$Connectors$Right;
		default:
			return _user$project$Connectors$Top;
	}
};
var _user$project$ConnectorUI$getOptionAttrs = F2(
	function (side, value) {
		var _p2 = _elm_lang$core$Native_Utils.eq(
			_elm_lang$core$Basics$toString(side),
			value);
		if (_p2 === true) {
			return {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$selected(true),
				_1: {ctor: '[]'}
			};
		} else {
			return {ctor: '[]'};
		}
	});
var _user$project$ConnectorUI$getSideOptions = function (side) {
	return {
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$option,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$value('Top'),
				_1: A2(_user$project$ConnectorUI$getOptionAttrs, side, 'Top')
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('Top'),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$option,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$value('Bottom'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Bottom'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$option,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$value('Left'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Left'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$option,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$value('Right'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Right'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		}
	};
};
var _user$project$ConnectorUI$nodeConnectorList = function (node) {
	return A2(
		_elm_lang$core$List$map,
		function (x) {
			return A2(
				_elm_lang$html$Html$li,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(node.displayText),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_user$project$ConnectorUI$getSideText(x.exitSide)),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(
									_elm_lang$core$Basics_ops['++'],
									' ',
									A2(
										_elm_lang$core$Basics_ops['++'],
										_user$project$ConnectorUI$getSideText(x.entrySide),
										' '))),
							_1: {ctor: '[]'}
						}
					}
				});
		},
		node.connectors);
};
var _user$project$ConnectorUI$bothSelectedPanel = F3(
	function (first, second, c) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('divConnectorCreation'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$span,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('propName'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Start: '),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('propValue'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(first.displayText),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('propName'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Exit: '),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$span,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('propValue'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$select,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onInput(
													function (x) {
														return _user$project$MapMsg$CreateConnector(
															_user$project$Connectors$ExitChanged(
																_user$project$ConnectorUI$stringToSide(x)));
													}),
												_1: {ctor: '[]'}
											},
											_user$project$ConnectorUI$getSideOptions(c.exitSide)),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$span,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('propName'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('End: '),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$span,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('propValue'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(second.displayText),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$span,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('propName'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Enter: '),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$span,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('propValue'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$select,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Events$onInput(
															function (x) {
																return _user$project$MapMsg$CreateConnector(
																	_user$project$Connectors$EnterChanged(
																		_user$project$ConnectorUI$stringToSide(x)));
															}),
														_1: {ctor: '[]'}
													},
													_user$project$ConnectorUI$getSideOptions(c.entrySide)),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$button,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onClick(
													_user$project$MapMsg$CreateConnector(_user$project$Connectors$FinishConnector)),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Create Connector'),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			});
	});
var _user$project$ConnectorUI$firstSelectedPanel = function (node) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('Start Node: '),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(node.displayText),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$ConnectorUI$waitingPanel = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text('Select the start node for this connector'),
		_1: {ctor: '[]'}
	});
var _user$project$ConnectorUI$determineConnectorPanel = function (model) {
	var _p3 = model.actionState;
	if (_p3.ctor === 'Connecting') {
		var _p4 = _p3._0;
		switch (_p4.ctor) {
			case 'Waiting':
				return _user$project$ConnectorUI$waitingPanel;
			case 'FirstSelected':
				return _user$project$ConnectorUI$firstSelectedPanel(_p4._0);
			default:
				return A3(_user$project$ConnectorUI$bothSelectedPanel, _p4._0._0, _p4._0._1, _p4._0._2);
		}
	} else {
		return _user$project$ConnectorUI$waitingPanel;
	}
};
var _user$project$ConnectorUI$getNodeConnectionPanel = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('divPropertyPanel'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$ConnectorUI$determineConnectorPanel(model),
			_1: {ctor: '[]'}
		});
};
